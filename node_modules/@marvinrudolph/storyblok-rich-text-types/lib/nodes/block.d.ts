import { Node, TextNode } from '../';
import { Block } from '../enum';
import { TopLevelNodes } from '.';
export interface DocumentNode extends Node {
    type: Block.DOCUMENT;
    content: TopLevelNodes[];
}
export declare type HeadingLevels = 1 | 2 | 3 | 4 | 5 | 6;
export interface HeadingAttributes {
    level: HeadingLevels;
}
export interface HeadingNode extends Node {
    type: Block.HEADING;
    attrs: HeadingAttributes;
    content: TextNode[];
}
export interface ParagraphNode extends Node {
    type: Block.PARAGRAPH;
    content: TextNode[];
}
export interface ListItemNode extends Node {
    type: Block.LIST_ITEM;
    content: BlockNodes[];
}
export interface ListAttributes {
}
export interface ListNode extends Node {
    type: Block.OL_LIST | Block.UL_LIST;
    content: ListItemNode[];
    attrs?: ListAttributes;
}
export interface OrderedListAttributes extends ListAttributes {
    order: number;
}
export interface OrderedListNode extends ListNode {
    type: Block.OL_LIST;
    attrs: OrderedListAttributes;
}
export interface UnorderedListNode extends ListNode {
    type: Block.UL_LIST;
}
export interface QuoteNode extends Node {
    type: Block.QUOTE;
    content: ParagraphNode[];
}
export interface CodeAttributes {
    class: string;
}
export interface CodeBlockNode extends Node {
    type: Block.CODE;
    attrs: CodeAttributes;
    content: TextNode[];
}
export interface HrNode extends Node {
    type: Block.HR;
}
export interface BrNode extends Node {
    type: Block.BR;
}
export interface ImageAttributes {
    alt: string;
    src: string;
    title: string | null;
}
export interface ImageNode extends Node {
    type: Block.IMAGE;
    attrs: ImageAttributes;
}
export declare type BlockNodes = DocumentNode | HeadingNode | ParagraphNode | ListItemNode | OrderedListNode | UnorderedListNode | QuoteNode | CodeBlockNode | HrNode | BrNode | ImageNode;
export declare type VoidBlockNodes = Extract<BlockNodes, HrNode | BrNode | ImageNode>;
export declare type BlockNodesWithContent = Exclude<BlockNodes, VoidBlockNodes>;
