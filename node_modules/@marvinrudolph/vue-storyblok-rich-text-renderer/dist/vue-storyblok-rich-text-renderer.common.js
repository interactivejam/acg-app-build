module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "1c25");
/******/ })
/************************************************************************/
/******/ ({

/***/ "1c25":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: C:/GitHub/storyblok-rich-text-renderer/node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  if (true) {
    __webpack_require__("4141")
  }

  var i
  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\/)[^/]+\.js(\?.*)?$/))) {
    __webpack_require__.p = i[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// EXTERNAL MODULE: external {"commonjs":"vue","commonjs2":"vue","root":"Vue"}
var external_commonjs_vue_commonjs2_vue_root_Vue_ = __webpack_require__("8bbf");
var external_commonjs_vue_commonjs2_vue_root_Vue_default = /*#__PURE__*/__webpack_require__.n(external_commonjs_vue_commonjs2_vue_root_Vue_);

// CONCATENATED MODULE: C:/GitHub/storyblok-rich-text-renderer/node_modules/@marvinrudolph/storyblok-rich-text-types/lib/nodes/component.js
const ComponentType = 'blok';
//# sourceMappingURL=component.js.map
// CONCATENATED MODULE: C:/GitHub/storyblok-rich-text-renderer/node_modules/@marvinrudolph/storyblok-rich-text-types/lib/nodes/text.js
const TextType = 'text';
//# sourceMappingURL=text.js.map
// CONCATENATED MODULE: C:/GitHub/storyblok-rich-text-renderer/node_modules/@marvinrudolph/storyblok-rich-text-types/lib/nodes/index.js


//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: C:/GitHub/storyblok-rich-text-renderer/node_modules/@marvinrudolph/storyblok-rich-text-types/lib/enum/block.js
var Block;
(function (Block) {
    Block["DOCUMENT"] = "doc";
    Block["HEADING"] = "heading";
    Block["PARAGRAPH"] = "paragraph";
    Block["QUOTE"] = "blockquote";
    Block["OL_LIST"] = "ordered_list";
    Block["UL_LIST"] = "bullet_list";
    Block["LIST_ITEM"] = "list_item";
    Block["CODE"] = "code_block";
    Block["HR"] = "horizontal_rule";
    Block["BR"] = "hard_break";
    Block["IMAGE"] = "image";
})(Block || (Block = {}));
/* harmony default export */ var enum_block = (Block);
//# sourceMappingURL=block.js.map
// CONCATENATED MODULE: C:/GitHub/storyblok-rich-text-renderer/node_modules/@marvinrudolph/storyblok-rich-text-types/lib/enum/mark.js
var Mark;
(function (Mark) {
    Mark["BOLD"] = "bold";
    Mark["STRONG"] = "strong";
    Mark["STRIKE"] = "strike";
    Mark["UNDERLINE"] = "underline";
    Mark["ITALIC"] = "italic";
    Mark["CODE"] = "code";
    Mark["LINK"] = "link";
})(Mark || (Mark = {}));
/* harmony default export */ var mark = (Mark);
//# sourceMappingURL=mark.js.map
// CONCATENATED MODULE: C:/GitHub/storyblok-rich-text-renderer/node_modules/@marvinrudolph/storyblok-rich-text-types/lib/enum/index.js


//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: C:/GitHub/storyblok-rich-text-renderer/node_modules/@marvinrudolph/storyblok-rich-text-types/lib/index.js


//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ./src/plugin/resolver/block.tsx
var _defaultBlockResolver;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


var defaultBlockResolvers = (_defaultBlockResolver = {}, _defineProperty(_defaultBlockResolver, enum_block.DOCUMENT, function (h, children) {
  return h("div", [children]);
}), _defineProperty(_defaultBlockResolver, enum_block.HEADING, function (h, children, node) {
  var Tag = "h".concat(node.attrs.level);
  return h(Tag, [children]);
}), _defineProperty(_defaultBlockResolver, enum_block.PARAGRAPH, function (h, children) {
  return h("p", [children]);
}), _defineProperty(_defaultBlockResolver, enum_block.QUOTE, function (h, children) {
  return h("blockquote", [children]);
}), _defineProperty(_defaultBlockResolver, enum_block.OL_LIST, function (h, children) {
  return h("ol", [children]);
}), _defineProperty(_defaultBlockResolver, enum_block.UL_LIST, function (h, children) {
  return h("ul", [children]);
}), _defineProperty(_defaultBlockResolver, enum_block.LIST_ITEM, function (h, children) {
  return h("li", [children]);
}), _defineProperty(_defaultBlockResolver, enum_block.CODE, function (h, children, node) {
  return h("pre", {
    "class": node.attrs.class
  }, [h("code", [children])]);
}), _defineProperty(_defaultBlockResolver, enum_block.HR, function (h) {
  return h("hr");
}), _defineProperty(_defaultBlockResolver, enum_block.BR, function (h) {
  return h("br");
}), _defineProperty(_defaultBlockResolver, enum_block.IMAGE, function (h, node) {
  var _node$attrs = node.attrs,
      alt = _node$attrs.alt,
      src = _node$attrs.src,
      title = _node$attrs.title;
  return h("img", {
    "attrs": {
      "src": src,
      "alt": alt,
      "title": title
    }
  });
}), _defaultBlockResolver);
// CONCATENATED MODULE: ./src/plugin/resolver/mark.tsx
var _defaultMarkResolvers;

function mark_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


var defaultMarkResolvers = (_defaultMarkResolvers = {}, mark_defineProperty(_defaultMarkResolvers, mark.BOLD, function (h, text) {
  return h("b", [text]);
}), mark_defineProperty(_defaultMarkResolvers, mark.STRONG, function (h, text) {
  return h("strong", [text]);
}), mark_defineProperty(_defaultMarkResolvers, mark.STRIKE, function (h, text) {
  return h("s", [text]);
}), mark_defineProperty(_defaultMarkResolvers, mark.UNDERLINE, function (h, text) {
  return h("u", [text]);
}), mark_defineProperty(_defaultMarkResolvers, mark.ITALIC, function (h, text) {
  return h("i", [text]);
}), mark_defineProperty(_defaultMarkResolvers, mark.CODE, function (h, text) {
  return h("code", [text]);
}), mark_defineProperty(_defaultMarkResolvers, mark.LINK, function (h, text, node) {
  var _node$attrs = node.attrs,
      href = _node$attrs.href,
      target = _node$attrs.target;
  return h("a", {
    "attrs": {
      "href": href,
      "target": target
    }
  }, [text]);
}), _defaultMarkResolvers);
// CONCATENATED MODULE: ./src/plugin/resolver/component.tsx
var defaultComponentResolver = function defaultComponentResolver(h, body) {
  return h("div", ["No rendering definition for component ", h("strong", [body.component]), " found."]);
};
// CONCATENATED MODULE: ./src/plugin/resolver/index.ts



// CONCATENATED MODULE: ./src/plugin/utils.ts


function createEnumChecker(enumVariable) {
  var enumValues = Object.values(enumVariable);
  return function (value) {
    return enumValues.includes(value);
  };
}

var isBlock = createEnumChecker(enum_block);
function isTextNode(node) {
  return node.type === TextType;
}
function isBlockNode(node) {
  return isBlock(node.type);
}
function isVoidBlockNode(node) {
  return [enum_block.BR, enum_block.HR, enum_block.IMAGE].includes(node.type);
}
function isComponentNode(node) {
  return node.type === ComponentType;
}
// CONCATENATED MODULE: ./src/plugin/renderer.tsx
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { renderer_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function renderer_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var renderer_useRenderer = function useRenderer(h, renderText, options) {
  var _options$resolvers, _options$resolvers2, _options$resolvers3;

  var resolvers = {
    blockResolvers: _objectSpread({}, defaultBlockResolvers, {}, (_options$resolvers = options.resolvers) === null || _options$resolvers === void 0 ? void 0 : _options$resolvers.blocks),
    markResolvers: _objectSpread({}, defaultMarkResolvers, {}, (_options$resolvers2 = options.resolvers) === null || _options$resolvers2 === void 0 ? void 0 : _options$resolvers2.marks),
    componentResolvers: _objectSpread({
      _default: defaultComponentResolver
    }, (_options$resolvers3 = options.resolvers) === null || _options$resolvers3 === void 0 ? void 0 : _options$resolvers3.components)
  };

  function addKeyToNode(node, key) {
    if (node.key === null) {
      node.key = key;
    }

    return node;
  }

  function renderMark(text, mark) {
    var markResolvers = resolvers.markResolvers;
    var resolver = markResolvers[mark.type];

    if (mark.type in markResolvers) {
      return resolver(h, text, mark);
    } else {
      return text;
    }
  }

  function renderBlock(block) {
    var blockResolvers = resolvers.blockResolvers;

    if (isVoidBlockNode(block)) {
      var resolver = blockResolvers[block.type];
      return resolver(h, block);
    } else {
      var blockWithContent = block;
      var _resolver = blockResolvers[block.type];
      var children = blockWithContent.content ? renderNodeList(blockWithContent.content) : [];
      return _resolver(h, children, block);
    }
  }

  function renderNode(node) {
    if (isTextNode(node)) {
      if (!node.marks) {
        return renderText(node.text);
      }

      return node.marks.reduce(function (value, mark) {
        return renderMark(value, mark);
      }, renderText(node.text));
    } else if (isBlockNode(node)) {
      return renderBlock(node);
    } else if (isComponentNode(node)) {
      return renderComponents(node);
    }

    return renderText('');
  }

  function renderNodeList(nodes) {
    var nodeList = [];
    nodes.forEach(function (node, index) {
      var renderedNode = renderNode(node);

      if (renderedNode instanceof Array) {
        renderedNode.forEach(function (childNode, childIndex) {
          nodeList.push(addKeyToNode(childNode, index + childIndex));
        });
      } else {
        nodeList.push(addKeyToNode(renderedNode, index));
      }
    });
    return nodeList;
  }

  function renderComponents(node) {
    var componentResolvers = resolvers.componentResolvers;
    var components = [];
    node.attrs.body.forEach(function (body) {
      var component = body.component;
      var resolver = componentResolvers[component] || componentResolvers._default;

      if (resolver instanceof Function) {
        var componentResolver = resolver;
        components.push(componentResolver(h, body, node));
      } else {
        components.push(h(resolver));
      }
    });
    return components;
  }

  return {
    renderNode: renderNode,
    renderNodeList: renderNodeList,
    resolvers: resolvers
  };
};
// CONCATENATED MODULE: C:/GitHub/storyblok-rich-text-renderer/node_modules/cache-loader/dist/cjs.js??ref--14-0!C:/GitHub/storyblok-rich-text-renderer/node_modules/thread-loader/dist/cjs.js!C:/GitHub/storyblok-rich-text-renderer/node_modules/babel-loader/lib!C:/GitHub/storyblok-rich-text-renderer/node_modules/ts-loader??ref--14-3!C:/GitHub/storyblok-rich-text-renderer/node_modules/cache-loader/dist/cjs.js??ref--0-0!C:/GitHub/storyblok-rich-text-renderer/node_modules/vue-loader/lib??vue-loader-options!./src/components/RichTextRenderer.vue?vue&type=script&lang=ts&
function RichTextRenderervue_type_script_lang_ts_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function RichTextRenderervue_type_script_lang_ts_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { RichTextRenderervue_type_script_lang_ts_ownKeys(Object(source), true).forEach(function (key) { RichTextRenderervue_type_script_lang_ts_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { RichTextRenderervue_type_script_lang_ts_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function RichTextRenderervue_type_script_lang_ts_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



/* harmony default export */ var RichTextRenderervue_type_script_lang_ts_ = (external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'rich-text-renderer',
  props: {
    document: {
      type: [Object, Array],
      required: true
    },
    options: {
      type: Object,
      default: function _default() {
        return {};
      }
    }
  },
  render: function render(h) {
    var renderer = renderer_useRenderer(h, this._v, RichTextRenderervue_type_script_lang_ts_objectSpread({}, this.$richTextRenderer.options, {}, this.options));
    var renderNode = renderer.renderNode,
        renderNodeList = renderer.renderNodeList;

    if (document instanceof Array) {
      return h('div', renderNodeList(this.document));
    } else {
      return renderNode(this.document);
    }
  }
}));
// CONCATENATED MODULE: ./src/components/RichTextRenderer.vue?vue&type=script&lang=ts&
 /* harmony default export */ var components_RichTextRenderervue_type_script_lang_ts_ = (RichTextRenderervue_type_script_lang_ts_); 
// CONCATENATED MODULE: C:/GitHub/storyblok-rich-text-renderer/node_modules/vue-loader/lib/runtime/componentNormalizer.js
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}

// CONCATENATED MODULE: ./src/components/RichTextRenderer.vue
var RichTextRenderer_render, staticRenderFns




/* normalize component */

var component = normalizeComponent(
  components_RichTextRenderervue_type_script_lang_ts_,
  RichTextRenderer_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var RichTextRenderer = (component.exports);
// CONCATENATED MODULE: ./src/plugin/index.ts
function plugin_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function plugin_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { plugin_ownKeys(Object(source), true).forEach(function (key) { plugin_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { plugin_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function plugin_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


var defaultOptions = {
  global: true
};
var VueRichTextRenderer = {
  install: function install(Vue) {
    var pluginOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;

    var options = plugin_objectSpread({}, defaultOptions, {}, pluginOptions);

    Vue.prototype.$richTextRenderer = {
      options: options
    };

    if (options.global) {
      Vue.component('RichTextRenderer', RichTextRenderer);
    }
  }
};

/* harmony default export */ var src_plugin = (VueRichTextRenderer);
// CONCATENATED MODULE: C:/GitHub/storyblok-rich-text-renderer/node_modules/@vue/cli-service/lib/commands/build/entry-lib.js
/* concated harmony reexport RichTextRenderer */__webpack_require__.d(__webpack_exports__, "RichTextRenderer", function() { return RichTextRenderer; });


/* harmony default export */ var entry_lib = __webpack_exports__["default"] = (src_plugin);



/***/ }),

/***/ "4141":
/***/ (function(module, exports) {

// document.currentScript polyfill by Adam Miller

// MIT license

(function(document){
  var currentScript = "currentScript",
      scripts = document.getElementsByTagName('script'); // Live NodeList collection

  // If browser needs currentScript polyfill, add get currentScript() to the document object
  if (!(currentScript in document)) {
    Object.defineProperty(document, currentScript, {
      get: function(){

        // IE 6-10 supports script readyState
        // IE 10+ support stack trace
        try { throw new Error(); }
        catch (err) {

          // Find the second match for the "at" string to get file src url from stack.
          // Specifically works with the format of stack traces in IE.
          var i, res = ((/.*at [^\(]*\((.*):.+:.+\)$/ig).exec(err.stack) || [false])[1];

          // For all scripts on the page, if src matches or if ready state is interactive, return the script tag
          for(i in scripts){
            if(scripts[i].src == res || scripts[i].readyState == "interactive"){
              return scripts[i];
            }
          }

          // If no match, return null
          return null;
        }
      }
    });
  }
})(document);


/***/ }),

/***/ "8bbf":
/***/ (function(module, exports) {

module.exports = require("vue");

/***/ })

/******/ });
//# sourceMappingURL=vue-storyblok-rich-text-renderer.common.js.map